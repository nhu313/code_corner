<h1>
  String
</h1>
<p>
  String is a sequence of characters. Remember <code class="inline">char</code>
  can only hold one character. In order to hold multiple characters, Java has a class named <code class="inline">String</code>. The most common way to create a String is put the text in double quote (<code class="inline">&quot;</code>) like this:
</p>
<pre><code class="jsx">String cafeName = &quot;Java Café&quot;;</code></pre>
<p>
  Similar to primitive data type, you can declare a String variable with the type (String), variable name, and the value:</p>
  <ol class="ordered-list">
    <li>type (String)</li>
    <li>lower case variable name (cafeName)</li>
    <li>value in double quote(&quot;Java Café&quot;)</li>
  </ol>

  <p>In the real world, text are rarely one char long, therefore, String is most often used when dealing with text. Anywhere more than one character is used, then a String is needed. Here are a few more examples:</p>
<pre><code class="java">String word = &quot;coffee&quot;;
String phrase = &quot;Welcome to Java Café&quot;;
</code></pre>

<h3>
  Let’s practice!
</h3>
<ol class="ordered-list">
  <li>
    <p>
      Declare a String variable named <code class="inline">drink</code> with the value <code class="inline">mocha</code>.
    </p>
    <%= live_render(@conn, CodeCornerWeb.PracticeProblemLive, session: %{"problem_id" => 201, "user_id" => @current_user.id}) %>
  </li>
  <li>
    <p>
      Create a String variable named <code class="inline">food</code> with the value <code class="inline">Strawberry oats</code>.
    </p>
    <%= live_render(@conn, CodeCornerWeb.PracticeProblemLive, session: %{"problem_id" => 202, "user_id" => @current_user.id}) %>
  </li>
  <li>
    <p>
      Create a String variable named <code class="inline">barista</code> with the value <code class="inline">Carol</code>
    </p>
    <%= live_render(@conn, CodeCornerWeb.PracticeProblemLive, session: %{"problem_id" => 203, "user_id" => @current_user.id}) %>
  </li>
  <li>
    <p>
      Create a String variable named <code class="inline">dessert</code> with the value <code class="inline">brownie</code>
    </p>
    <%= live_render(@conn, CodeCornerWeb.PracticeProblemLive, session: %{"problem_id" => 204, "user_id" => @current_user.id}) %>
  </li>
  <li>
    <p>
      Create a String variable named <code class="inline">smoothie</code> with the value <code class="inline">Sweet Green</code>
    </p>
    <%= live_render(@conn, CodeCornerWeb.PracticeProblemLive, session: %{"problem_id" => 205, "user_id" => @current_user.id}) %>
  </li>
</ol>


<h2>
  String concatenation
</h2>
<p>
  To combine two or more strings together, use the <code class="inline">+</code> sign
</p>
<pre><code class="java">String greeting = &quot;Hello, &quot;;
String customerName = &quot;Riley&quot;;

//use + to combine the string
String message = greeting + customerName;</code></pre>
<p>
  To concatenate a String with a primitive data, use the <code class="inline">+</code>
  sign as long as the string comes first.
</p>
<pre><code class="java">int quantity = 2;
String order = &quot;I would like &quot; + quantity + &quot; black coffee&quot;;</code></pre>
<p>
  Note this is a shortened version to learn the essential for the research project.
</p>

<a href="/lessons/class">
  <button class="rounded-lg hover:bg-zinc-700 active:text-white/80 primary-btn lesson-next">
    Next: Class
  </button>
</a>
